---
- hosts: localhost
  connection: local

  tasks:
    - name: Gather git information
      import_tasks: tasks/git-info.yml

    - name: Install dependencies
      import_tasks: tasks/install-dependencies.yml

    - set_fact:
        k8s_vars:
          production:
            namespace: video-downloader-back-end
            hostname: api.video.home.ruchij.com
            api_replicas: 2
            host_path_mappings:
              - host_path: /media/disk/video-downloader/production/videos
                pod_mount_path: /home/disk/videos
              - host_path: /media/storage/video-downloader/production/videos
                pod_mount_path: /home/storage/videos
              - host_path: /media/data/video-downloader/production/videos
                pod_mount_path: /home/videos
              - host_path: /home/ruchira/Data/video-downloader/production/images
                pod_mount_path: /home/images
          development:
            namespace: video-downloader-back-end-{{ git_branch }}
            hostname: api.{{ git_branch }}.video.dev.ruchij.com
            api_replicas: 1
            host_path_mappings:
              - host_path: /media/disk/video-downloader/development/videos
                pod_mount_path: /home/disk/videos
              - host_path: /media/storage/video-downloader/development/videos
                pod_mount_path: /home/storage/videos
              - host_path: /media/data/video-downloader/development/videos
                pod_mount_path: /home/videos
              - host_path: /home/ruchira/Data/video-downloader/development/images
                pod_mount_path: /home/images

    - set_fact:
        namespace: "{{ k8s_vars[env].namespace }}"
        hostname: "{{ k8s_vars[env].hostname }}"
        api_replicas: "{{ k8s_vars[env].api_replicas }}"
        host_path_mappings: "{{ k8s_vars[env].host_path_mappings }}"
        ghcr_credentials: "{{ lookup('aws_ssm', '/github/ghcr/docker-config', region='ap-southeast-2') }}"

    - name: Set config values and secrets
      import_tasks: tasks/configs-and-secrets.yml

    - name: Render K8s resource files
      import_tasks: tasks/k8s-resource-files.yml

    - name: Set kube_config
      import_tasks: tasks/k8s-config.yml

    - name: Deploy K8s resources
      block:
        - name: Create Namespace
          command: kubectl apply -f k8s-output/Namespace.yaml --kubeconfig {{ kubeconfig }}

        - name: Create Docker registry secret
          command: kubectl apply -f k8s-output/DockerRegistryCredentials.yaml --kubeconfig {{ kubeconfig }}

        - name: Deploy DB backup
          block:
            - name: Create ConfigMap
              command: kubectl apply -f k8s-output/db-backup/ConfigMap.yaml --kubeconfig {{ kubeconfig }}

            - name: Create Secrets
              command: kubectl apply -f k8s-output/db-backup/Secrets.yaml --kubeconfig {{ kubeconfig }}

            - name: Deploy CronJob
              command: kubectl apply -f k8s-output/db-backup --kubeconfig {{ kubeconfig }}

            - name: Take DB backup snapshot
              block:
                - name: Set DB snapshot job name
                  set_fact:
                    snapshot_job_name: db-backup-job-{{ git_commit }}-{{ ansible_date_time.iso8601_basic_short | lower }}

                - name: Run DB backup job
                  command: |
                    kubectl create job \
                      --from=cronjob/db-backup-cron-job \
                      {{ snapshot_job_name }} \
                      --kubeconfig {{ kubeconfig }} \
                      -n {{ namespace }}

                - name: Wait for DB backup snapshot to complete
                  command: |
                    kubectl wait \
                      --for=condition=complete \
                      job/{{ snapshot_job_name }} \
                      --kubeconfig {{ kubeconfig }} \
                      -n {{ namespace }} \
                      --timeout=120s

        - name: Deploy DB migration
          block:
            - name: Create data ConfigMap
              command: kubectl apply -f k8s-output/db-migration/DataConfigMap.yaml --kubeconfig {{ kubeconfig }}

            - name: Create file ConfigMap
              command: kubectl apply -f k8s-output/db-migration/FileConfigMap.yaml --kubeconfig {{ kubeconfig }}

            - name: Create Secrets
              command: kubectl apply -f k8s-output/db-migration/Secrets.yaml --kubeconfig {{ kubeconfig }}

            - name: Deploy Job
              command: kubectl apply -f k8s-output/db-migration --kubeconfig {{ kubeconfig }}

            - name: Wait Job to complete
              command: |
                kubectl wait \
                  --for=condition=complete \
                  job/database-migration-job-{{ git_commit }} \
                  --kubeconfig {{ kubeconfig }} \
                  -n {{ namespace }} \
                  --timeout=120s

        - name: Deploy api
          block:
            - name: Create data ConfigMap
              command: kubectl apply -f k8s-output/api/DataConfigMap.yaml --kubeconfig {{ kubeconfig }}

            - name: Create file ConfigMap
              command: kubectl apply -f k8s-output/api/FileConfigMap.yaml --kubeconfig {{ kubeconfig }}

            - name: Create Secrets
              command: kubectl apply -f k8s-output/api/Secrets.yaml --kubeconfig {{ kubeconfig }}

            - name: Deploy application
              command: kubectl apply -f k8s-output/api --kubeconfig {{ kubeconfig }}

        - name: Deploy batch
          block:
            - name: Create data ConfigMap
              command: kubectl apply -f k8s-output/batch/DataConfigMap.yaml --kubeconfig {{ kubeconfig }}

            - name: Create file ConfigMap
              command: kubectl apply -f k8s-output/batch/FileConfigMap.yaml --kubeconfig {{ kubeconfig }}

            - name: Create Secrets
              command: kubectl apply -f k8s-output/batch/Secrets.yaml --kubeconfig {{ kubeconfig }}

            - name: Deploy application
              command: kubectl apply -f k8s-output/batch --kubeconfig {{ kubeconfig }}

        - name: Wait for successful api deployment
          command: kubectl rollout status deployment api-deployment --kubeconfig {{ kubeconfig }} -n {{ namespace }}

        - name: Wait for successful batch deployment
          command: kubectl rollout status deployment batch-deployment --kubeconfig {{ kubeconfig }} -n {{ namespace }}

    - name: Clean up output directory
      file:
        path: k8s-output
        state: absent